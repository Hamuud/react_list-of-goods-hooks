{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","goods","visibleGoods","ALPHABET","sort","firstGood","secondGood","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA6CE,IAAME,EAAM,WACjB,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EAtCD,SACLA,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENG,EAAY,YAAOD,GAEzB,OAAQJ,GACN,KAAKL,EAASW,SACZD,EACGE,MAAK,SAACC,EAAWC,GAAZ,OACJD,EAAUE,cAAcD,MAE5B,MAEF,KAAKd,EAASgB,OACZN,EAAaE,MAAK,SAACC,EAAWC,GAAZ,OAChBD,EAAUI,OAASH,EAAWG,UAElC,KAAKjB,EAASI,MAahB,OAPIG,GACFG,EAAaQ,UAIfC,QAAQC,IAAIf,EAAUE,GAEfG,EAOOW,CAAkBpB,EAAiB,CAAEI,WAAUE,eAmB7D,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYnB,IAAaL,EAASW,WAEtCc,QA1Be,WACrBnB,EAAYN,EAASW,WAmBjB,iCAWA,wBACEY,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYnB,IAAaL,EAASgB,SAEtCS,QAjCa,WACnBnB,EAAYN,EAASgB,SA0BjB,4BAWA,wBACEO,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAajB,IAEjBkB,QAxCa,WACnBjB,GAAeD,IAiCX,sBAWEF,IAAaL,EAASI,MAAQG,IAE9B,wBACEgB,KAAK,SACLD,UAAWE,IACT,mBACA,CAAE,WAAYnB,IAAaL,EAASI,OAEtCqB,QAjDS,WACjBjB,GAAc,GACdF,EAAYN,EAASI,OAyCf,sBAaJ,6BACE,6BACIK,EAAMiB,KAAI,SAAAC,GAAI,OACd,oBAAe,UAAQ,OAAvB,SACGA,GADMA,cCzIrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ae735fe2.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods\n        .sort((firstGood, secondGood) => (\n          firstGood.localeCompare(secondGood)\n        ));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((firstGood, secondGood) => (\n        firstGood.length - secondGood.length));\n      break;\n    case SortType.NONE:\n      break;\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  const sortByAlphabet = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const sortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const reverseGoods = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const resetGoods = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n          onClick={sortByAlphabet}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={reverseGoods}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed)\n        && (\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-danger',\n              { 'is-light': sortType !== SortType.NONE },\n            )}\n            onClick={resetGoods}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          { goods.map(good => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}